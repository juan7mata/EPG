**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: tvguide.dk
* @MinSWversion: V5.0
* @Revision 12 - [26/04/2024] Blackbear199
*   episode fix(dk channels)
*   remove year from episode(movies)
*   description fix
*   channel creation rewrite
* @Revision 11 - [13/11/2023] Blackbear199
*   site changes
* @Revision 10 - [16/09/2019] Blackbear199
*   details page rewrite
* @Revision 9 - [19/03/2019] Blackbear199
*   add date scrub
* @Revision 8 - [03/03/2019] Blackbear199
*   add channel logo,multi lang
* @Revision 7 - [13/03/2018] Blackbear199
*   site changes
* @Remarks:
*
* @header_end
**------------------------------------------------------------------------------------------------
site {url=tvguide.dk|timezone=Europe/Copenhagen|maxdays=8.1|cultureinfo=da-DK|charset=UTF-8|titlematchfactor=90|ratingsystem=DK|nopageoverlaps}
site {episodesystem=onscreen}
*
url_index {url|##channel##}
url_index.headers {customheader=Accept-Encoding=gzip,deflate,br}
*
urldate.format {datestring|dd-MM-yyyy} *not used
*
scope.range {(urlindex)|end}
global_temp_1.modify {substring(type=regex)|'config_site_id' "##([^#]*)$"}
global_temp_2.modify {substring(type=regex)|'config_site_id' "^([^#]*)##"}
global_temp_1.modify {addstart(not ~ "http")|https://www.tvguide.dk}
url_index.modify {replace|##channel##|'global_temp_1'}
index_variable_element.modify {substring(type=regex)|'global_temp_1' "https:\/\/[^\/]*"}
end_scope
*
index_urlchannellogo {url|https:|class="schedule-header-logo|src="|"|</picture>}
*
global_temp_9.scrub {regex||<a title.*?</a>||}
index_showsplit.scrub {regex||<div class="schedule-program-(?:entry\|featured-header)-starts".+?</a>[^<]*</div>||}
scope.range {(splitindex)|end}
global_temp_9.modify {replace(type=regex)|"\!\?\?\!"|-"}
index_showsplit.modify {replace(type=regex)|"\!\?\?\!"|-"}
index_showsplit.modify {set("")|'global_temp_9'}
*index_showsplit.modify {(debug)}
end_scope
*
index_urlshow {url|'index_variable_element'|href="||"|"}
index_urlshow.headers {customheader=Accept-Encoding=gzip,deflate,br}
*
index_start.scrub {regex||^[^>]*>\n\s*(\d{1,2}:\d{1,2})\n\s*</div>||}
index_title.scrub {regex||<a\n\s*(?:id\|class)[^>]*>(.*?)</a>||}
index_temp_1.scrub {single(separator=" @ " include=last)|<a title="||"|"}
index_temp_2.scrub {single(separator=" @ " include=first)|<a title="||"|"}
*
scope.range {(indexshowdetails)|end}
index_start.modify {set("")|'index_temp_1'}
index_title.modify {set("")|'index_temp_2'}
index_title.modify {cleanup}
index_episode.modify {substring(pattern="(S'S1' E'E1')""(S'S1' E'E1':'Et1')""(S'S1' 'E1':'Et1')""('E1':'Et1')""('E1')""Season 'S1'•Episode 'E1'""Sæson 'S1' · Episode 'E1'" type=regex)|'index_title' "\s\((?:S\d+\sE\d+\|\d+(?::\d+)?)\)(?:\s-\s.*)?$"}
index_title.modify {remove('index_episode' not "")|'index_episode'}
index_title.modify {remove(type=regex)|"\s[IVXLCDM]*$"}
index_subtitle.modify {substring(type=regex)|'index_episode' "\s-\s([^-]*)$"}
index_episode.modify {remove('index_subtitle' not "")| - 'index_subtitle'}
index_episode.modify {remove(type=regex)|"S\d{4}\s*E"}
index_episode.modify {remove(type=regex)|"^\s*\(\d{4}\)\s*$"}
index_subtitle.modify {clear('index_title')}
index_subtitle.modify {clear(~ "Episode")}
index_title.modify {addend('global_temp_2' "se")|(lang=sv)}
index_title.modify {addend('global_temp_2' "uk")|(lang=en)}
index_title.modify {addend('global_temp_2' "es")|(lang=es)}
index_title.modify {addend('global_temp_2' "de")|(lang=de)}
index_title.modify {addend('global_temp_2' "no")|(lang=no)}
index_subtitle.modify {addend('global_temp_2' "se")|(lang=sv)}
index_subtitle.modify {addend('global_temp_2' "uk")|(lang=en)}
index_subtitle.modify {addend('global_temp_2' "es")|(lang=es)}
index_subtitle.modify {addend('global_temp_2' "de")|(lang=de)}
index_subtitle.modify {addend('global_temp_2' "no")|(lang=no)}
end_scope
*
subtitle.scrub {single(separator="(" include=first)|Episode:</th>|<td>|</td>|</tr>}
titleoriginal.scrub {single(lang=en)|Original title:</th>|<td>|</td>|</tr>}
description.scrub {multi(exclude="<span")|<div class="zk-popup-description">|<p>|</p>|</div>}
category.scrub {single(separator=", ")|Genre:</th>|<td>|</td>|</tr>}
director.scrub {multi(include=">Instruktion<"">Instruktør<"">Director<")|<div class="streaming-cast-actor-info">||</li>|</li>}
actor.scrub {multi(exclude=">Værter<"">Vært<"">Instruktion<"">Instruktør<"">Director<"">Tilrettelæggelse<"">Forfatter<")|<div class="streaming-cast-actor-info">||</li>|</li>}
writer.scrub {multi(include=">Forfatter<")|<div class="streaming-cast-actor-info">||</li>|</li>}
presenter.scrub {multi(include=">Værter<"">Vært<"">Tilrettelæggelse<")|<div class="streaming-cast-actor-info">||</li>|</li>}
episode.scrub {regex||Sæson \d+ · Episode \d+\|Season <!-- -->\d+</li><li class="text-brand-light">•</li><li>Episode <!-- -->\d+||}
productiondate.scrub {single|Udgivet:</th>|<td>|</td>|</tr>}
showicon.scrub {single|<meta property="og:image" content="||"|"}
temp_1.scrub {single|<p class="mt-6 font-light leading-relaxed text-gray-300">||</p>|</p>}
temp_2.scrub {regex||Credits</h2>(?:.*?)(?:<div class="text-white line-clamp-2 text-center leading-tight">(.*?)</div>(?:.*?))*</div></div></div>||}
*
scope.range {(showdetails)|end}
title.modify {addstart|'index_title'}
subtitle.modify {cleanup}
title.modify {remove('subtitle' not "")|: 'subtitle'}
subtitle.modify {clear(~ "Episode")}
description.modify {remove|\|}
description.modify {remove(type=regex)|"<a href.*?<\/a>"}
description.modify {clear("[].")}
description.modify {cleanup}
description.modify {set("")|'temp_1'}
category.modify {cleanup(style=name)}
director.modify {substring(type=regex)|"<h4[^>]*>([^<]*)<\/h4>"}
loop {(each "temp_9" in 'actor')|end}
temp_8.modify {substring(type=regex)|'temp_9' "<h4[^>]*>(.+?)<\/h4>"}
temp_7.modify {substring(type=regex)|'temp_9' "<div class="streaming-cast-actor-role">(.*?)<\/div>"}
temp_6.modify {calculate('temp_7' not "Endvidere" format=F0 type=word)|'temp_8' #}
temp_7.modify {clear("Endvidere")}
temp_8.modify {clear('temp_6' > "4")}
temp_5.modify {addend('temp_8' not "")|'temp_8'(role='temp_7')#_#}
end_loop
temp_5.modify {remove|(role=)}
actor.modify {substring(type=regex)|'temp_5' "(.*?)#_#"}
actor.modify {replace|, |\|}
actor.modify {set("")|'temp_2'}
writer.modify {substring(type=regex)|"<h4[^>]*>([^<]*)<\/h4>"}
presenter.modify {substring(type=regex)|"<h4[^>]*>([^<]*)<\/h4>"}
presenter.modify {replace| og |\|}
episode.modify {cleanup(tags="<"">")}
showicon.modify {remove(type=regex)|"^https:$"}
showicon.modify {addstart([not ""] [not ~ "https"] &)|https:}
*
loop {('subtitle' not "" max=1)|end}
subtitle.modify {addend('global_temp_2' "se")|(lang=sv)}
subtitle.modify {addend('global_temp_2' "uk")|(lang=en)}
subtitle.modify {addend('global_temp_2' "es")|(lang=es)}
subtitle.modify {addend('global_temp_2' "de")|(lang=de)}
subtitle.modify {addend('global_temp_2' "no")|(lang=no)}
end_loop
loop {('description' not "" max=1)|end}
description.modify {addend('global_temp_2' "se")|(lang=sv)}
description.modify {addend('global_temp_2' "uk")|(lang=en)}
description.modify {addend('global_temp_2' "es")|(lang=es)}
description.modify {addend('global_temp_2' "de")|(lang=de)}
description.modify {addend('global_temp_2' "no")|(lang=no)}
end_loop
loop {('category' not "" max=1)|end}
category.modify {addend('global_temp_2' "se")|(lang=sv)}
category.modify {addend('global_temp_2' "uk")|(lang=en)}
category.modify {addend('global_temp_2' "es")|(lang=es)}
category.modify {addend('global_temp_2' "de")|(lang=de)}
category.modify {addend('global_temp_2' "no")|(lang=no)}
end_loop
subtitle.modify {clear('title')}
end_scope
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index {url|https://www.tvguide.dk/kanaler?country=|subpage|&type=ALL}
*subpage.format {list|dk|se|no|uk|es|de}
*index_site_id.scrub {regex||<div class="tw-mt-4 tw-grid tw-grid-cols-4 tw-gap-2">(.*?)</div>[^<]*</div>[^<]*</div>||}
*scope.range{(channellist)|end}
*index_temp_1.modify {set|dk\|se\|no\|uk\|es\|de}
*index_temp_2.modify {set|0}
*loop {(each "index_temp_9" in 'index_site_id')|end}
*index_temp_8.modify {substring(type=element)|'index_temp_1' 'index_temp_2' 1}
*index_temp_7.modify {substring(type=regex)|'index_temp_9' "<a href=\"([^\"]*)"}
*index_temp_6.modify {substring(type=regex)|'index_temp_9' "<psna class[^>]*>([^<]*)"}
*index_temp_7.modify {addstart|'index_temp_8'##}
*index_temp_7.modify {replace|\||####}
*index_temp_6.modify {replace|\||####}
*index_temp_5.modify {addend|'index_temp_7'####}
*index_temp_4.modify {addend|'index_temp_6'####}
*index_temp_2.modify {calculate(format=F0)|1 +}
*end_loop
*index_site_id.modify {substring(type=regex)|'index_temp_5' "(.*?)####"}
*index_site_channel.modify {substring(type=regex)|'index_temp_4' "(.*?)####"}
*index_site_channel.modify {replace|'|`}
*index_site_id.modify {cleanup(removeduplicates link="index_site_channel")}
*end_scope
** @auto_xml_channel_end
