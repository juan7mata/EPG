**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: winsportsonline.com
* @MinSWversion: V5.0
* @Revision 2  - [01/04/2024] Blackbear199
*   - rewrite
*   - name change to winsportsonline.com
* @Revision 1  - [30/03/2023] Blackbear199
*   - rewrite
* @Revision 0  - [21/03/2020] Mat8861
*   - creation
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------
site {url=winsportsonline.com|timezone=UTC|maxdays=4.1|cultureinfo=es-CO|charset=UTF-8|titlematchfactor=90|keepindexpage}
site {episodesystem=onscreen}
*
url_index                  {url|https://next.platform.mediastre.am/graphql}
url_index.headers          {method=POST}
url_index.headers          {contenttype=application/json}
url_index.headers          {postdata={"operationName":"getLivesEpg","variables":{"page":1,"hours":96},"query":"query getLivesEpg($page: Int = 1, $hours: Int) {\n  getLives {\n    _id\n    logo\n    name\n    schedules(hours: $hours, page: {limit: 0, page: $page}) {\n      _id\n      name\n      date_start\n      date_end\n      current\n      match {\n        matchDay\n        __typename\n      }\n      show {\n        _id\n        title\n        __typename\n      }\n      live {\n        _id\n        dvr\n        type\n        purchased\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n"}}
url_index.headers          {customheader=X-Client-Id=5cc0fca5aa211a225409a2d629bd180b46952eae3349e59c3f}
url_index.headers          {customheader=X-Ott-Language=es}
url_index.headers          {customheader=Accept-Encoding=gzip,deflate,br}
*
global_temp_1.modify {set(scope=urlindex)|'config_site_id'}
*
urldate.format             {datestring|yyyy-MM-dd}
*
index_urlchannellogo.scrub {single|{"_id":"'global_temp_1'","logo":"||"|"}
*
index_showsplit.scrub      {regex||\{"_id":"'global_temp_1'","logo":"[^"]*","name":"[^"]*","schedules":\[(.*?)\],"__typename"||}
scope.range                {(splitindex)|end}
index_showsplit.modify     {replace|\},\{|\}\|\{}
*index_showsplit.modify     {(debug)}
end_scope
*
index_start.scrub          {single(separator="." include=first)|,"date_start":"||"|"}
index_stop.scrub           {single(separator="." include=first)|,"date_end":"||"|"}
index_title.scrub          {single|,"name":"||",|",}
*
index_category.modify      {set|Sports}
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*index_site_id.scrub {regex||\{"_id":"([^"]*)","logo":"[^"]*","name":"[^"]*","schedules"||}
*index_site_channel.scrub {regex||\{"_id":"[^"]*","logo":"[^"]*","name":"([^"]*)","schedules"||}
*index_site_id.modify {cleanup(removeduplicates link="index_site_channel")}
** @auto_xml_channel_end

