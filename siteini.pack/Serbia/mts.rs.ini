**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: mts.rs
* @MinSWversion: V5.0
* @Revision 8 - [07/04/2024] Blackbear199
* - fix for site_id with special characters(regex)
* @Revision 7 - [23/03/2024] Blackbear199
* - start/stop time fix?
* @Revision 6 - [19/03/2024] Blackbear199
* - showsplit,channel creation fix
* @Revision 5 - [19/04/2023] Blackbear199
* - rewrite
* @Revision 4 - [13/02/2021] WG Team*  
* @Revision 3 - [12/03/2020] WG Team*  
* @Revision 2 - [08/12/2019] WG Team*  
* @Revision 1 - [09/08/2019] WG Team*
* @Revision 0 - [16/01/2019] WG Team*kvanc*  
* Creation 
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------
site {url=mts.rs|timezone=Europe/Belgrade|maxdays=7|cultureinfo=sr|charset=UTF-8|titlematchfactor=90|keepindexpage}
site {ratingsystem=RS|episodesystem=onscreen}
*
url_index                    {url|https://mts.rs/hybris/ecommerce/b2c/v1/products/search?sort=pozicija-rastuce&searchQueryContext=CHANNEL_PROGRAM&query=:pozicija-rastuce:channelProgramDates:|urldate|&pageSize=10000}
url_index.headers            {customheader=Accept-Encoding=gzip,deflate,br}
*
urldate.format               {datestring|yyyy-MM-dd}
*
scope.range                  {(urlindex)|2}
global_temp_1.modify         {set|'config_site_id'}
global_temp_1.modify         {cleanup(style=regex)}
*
index_urlchannellogo.scrub  {regex||^.*?\{"code":"'global_temp_1'","name":.*?"PRIMARY","url":"([^"]*)||}
*
index_showsplit.scrub        {regex||\{"code":"'global_temp_1'","name":"[^"]*",.*?"programs":\[(.*?)\]||}
scope.range                  {(splitindex)|end}
index_showsplit.modify       {replace(type=regex)|"\}(,)\{"|\|}
index_temp_1.modify          {substring(type=regex)|'index_showsplit' "\"start\":\"([^\"]*)"}
index_temp_1.modify          {cleanup(removeduplicates link="index_showsplit")}
*index_showsplit.modify      {(debug)}
end_scope
*
index_start.scrub            {single(separator="+" include=first)|"start":"||"|"}
index_stop.scrub             {single(separator="+" include=first)|"end":"||"|"}
index_title.scrub            {regex||"title":"(.*?)"(?:\}\|,")||}
index_description.scrub      {single|"description":"||","|","}
index_category.scrub         {single|"category":"||",|",}
index_showicon.scrub         {single|"picture":{"url":"||"|"}
index_temp_1.scrub           {single|"start":"||"|"}
*
if {('index_temp_1' ~ "+01:00")|2}
index_start.modify          {calculate(format=date,yyyy-MM-ddTHH:mm)|0:1:0 -}
index_stop.modify           {calculate(format=date,yyyy-MM-ddTHH:mm)|0:1:0 -}
if {('index_temp_1' ~ "+02:00")|2}
index_start.modify          {calculate(format=date,yyyy-MM-ddTHH:mm)|0:2:0 -}
index_stop.modify           {calculate(format=date,yyyy-MM-ddTHH:mm)|0:2:0 -}
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*index_site_id.scrub     {regex||\{"code":"([^"]*)","name":"[^"]*",||}
*index_site_channel.scrub{regex||\{"code":"[^"]*","name":"([^"]*)",||}
*index_site_channel.modify {replace|'| }
*index_site_id.modify    {cleanup(removeduplicates link="index_site_channel")}
** @auto_xml_channel_end
