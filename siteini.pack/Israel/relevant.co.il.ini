**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: relevant.co.il
* @MinSWversion: V5.0
* @Revision 0 - [10/11/2023] Blackbear199
*  - creation
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------
site {url=relevant.co.il|timezone=UTC|maxdays=7.1|cultureinfo=he-IL|charset=utf-8|titlematchfactor=90}
site {ratingsystem=MPAA|episodesystem=onscreen}
*
url_index {url|https://prihadar-prod.cloud.seachange.com/catalogue-search/prihadar/search/public/usercontext/epg/grid?stationIds=|channel|&startTime=|urldate|T00:00Z&endTime=##end##T23:59Z}
url_index.headers {customheader=Accept-Encoding=gzip,deflate,br}
*
urldate.format {datestring|yyyy-MM-dd}
*
scope.range {(urlindex)|end}
global_temp_1.modify {calculate(format=F0)|'config_timespan_days'}
global_temp_2.modify {calculate(format=date,yyyy-MM-dd)|'urldate_formatted' 'global_temp_1':0:0 +}
url_index.modify {replace|##end##|'global_temp_2'}
end_scope
*
index_urlchannellogo.modify {set|https://prihadar-prod-cdn.cloud.seachange.com/asset/images/RelevantChannelLogo-OCQOp.png}
*
index_showsplit.scrub {regex||"events":\[(.*?)\]\}\]$||}
index_showsplit.modify {replace|\},\{"externalIds"|\}\|\{"externalIds"}
*index_showsplit.modify {(debug)}
*
index_start.scrub {single|"startTime":"||Z"|Z"}
index_stop.scrub {single|"endTime":"||Z"|Z"}
index_title.scrub {single|"title":"||",|",}
index_description.scrub {single|"longDescription":"||",|",}
index_rating.scrub {single|"rating":"||"|"}
index_showicon.scrub {single|"poster","cdnUrl":"||"|"}
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index {url|https://prihadar-prod.cloud.seachange.com/catalogue-search/prihadar/search/public/usercontext/epg/stations}
*index_site_id.scrub {regex||\{"uid":"([^"]*)","taxonomyTerms"||}
*index_site_channel.scrub {regex||"title":"([^"]*)","relations"||}
*index_site_id.modify {cleanup(removeduplicates link="index_site_channel")}
** @auto_xml_channel_end
