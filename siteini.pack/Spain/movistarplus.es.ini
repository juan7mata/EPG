﻿**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: movistarplus.es
* @MinSWversion: V5.0
* @Revision 21 - [30/03/2024] Blackbear199
*  - subtitle/episode info fix
*  - add Live(Vivo)
* @Revision 20 - [27/03/2024] Blackbear199
*  - add index_category
*  - use landscape image for sports(Deportes)
* @Revision 19 - [09/14/2023] Blackbear199
*  - skip first show
*  - channel list fix
* @Revision 18 - [09/12/2023] Blackbear199
*  - showsplit fix
* @Revision 17 - [28/03/2023] Blackbear199
*  - ini update
* @Revision 16 - [28/04/2022] Blackbear199
*  - titleoriginal improvements
* @Revision 15 - [24/06/2019] Blackbear199
*  - rewrite
* @Revision 14 - [03/08/2018] Blackbear199
*  - rewrite(new epg data format)
* @Remarks: use timezone of pc running webgrab for timezone setting
*           episodesystem=onscreen only
* @header_end
**------------------------------------------------------------------------------------------------
site {url=movistarplus.es|timezone=America/Halifax|maxdays=7|cultureinfo=es-ES|charset=UTF-8|titlematchfactor=90|keepindexpage|nopageoverlaps|allowlastdayoverflow|firstshow=1}
site {ratingsystem=ES|episodesystem=onscreen}
*
url_index                  {url|https://www.movistarplus.es/programacion-tv/|urldate|?v=json}
url_index.headers          {customheader=Accept-Encoding=gzip,deflate,br}
*
urldate.format             {datestring|yyyy-MM-dd}
*
index_urlchannellogo.modify{set|https://www.movistarplus.es/recorte/m-NEO/guiapc/'config_site_id'.png}
*
global_temp_1.modify       {set|'config_site_id'}
index_showsplit.scrub      {multi|"'global_temp_1'-CODE":{"DATOS_CADENA":{|"PROGRAMAS":[|]}|]}}
scope.range                {(splitindex)|end}
index_showsplit.modify     {replace(type=regex)|"\!\?\?\!"|-}
index_showsplit.modify     {replace|\},\{|\}\|\{}
index_showsplit.modify     {cleanup(style=unidecode)}
index_showsplit.modify     {cleanup(style=jsondecode)}
index_temp_1.modify        {substring(type=regex)|'index_showsplit' "\"HORA_INICIO\":\"(\d+:\d+)\""}
index_temp_1.modify        {cleanup(removeduplicates span=1 link="index_showsplit")}
*index_showsplit.modify    {(debug)}
end_scope
*
index_urlshow              {url||"URL":"||"|"}
index_urlshow.headers      {customheader=Accept-Encoding=gzip,deflate,br}
*
index_start.scrub          {single|"HORA_INICIO":"||",|",}
index_duration.scrub       {single|"DURACION":||,|,}
index_title.scrub          {single|"TITULO":"||",|",}
index_category.scrub       {single|"GENERO":"||",|",}
index_temp_1.scrub         {regex||"DIRECTO":(true)||}
*
scope.range                {(indexshowdetails)|end}
index_title.modify         {remove(type=regex)|"(?:\s*\(T?\d+\))?:\sEp\.?\s*\d+.*$\|\s\(Temp\.?\s\d+\):.*$\|:\sEpisodio \d+"}
index_title.modify         {remove|CINE: }
index_title.modify         {remove|Cine: }
index_title.modify         {remove(type=regex)|"\s*\([^\)]*\)"}
index_title.modify         {addstart('index_temp_1' not "")|Vivo: }
end_scope
*
subtitle.scrub             {regex||\s*\(T?\d+(?:\/\d+)?\):(?:\s*Ep\.\d+)?\s*([^<]*)</h1>||}
description.scrub          {single|<div class="show-content">|<p>|</p>|</div>}
director.scrub             {multi|Director</h3>|<span  itemprop="name" >|</span>|</p>}
actor.scrub                {multi|Reparto</h3>|<span  itemprop="name" >|</span>|</p>}
producer.scrub             {multi|Productor</h3>|<span >|</span>|</p>}
writer.scrub               {multi|Guionista</h3>|<span >|</span>|</p>}
composer.scrub             {multi|Compositor</h3>|<span  itemprop="name" >|</span>|</p>}
rating.scrub               {single|Calificación</h3>|src="/assets/images/movistar-plus/calf-|.svg"|alt}
ratingicon.scrub           {single|Calificación</h3>|src="|"|alt}
starrating.scrub           {regex||<span itemprop="ratingValue"[^>]*>([1-9]\d*)</span>||}
category.scrub             {single(separator=" / ")|<p itemprop="genre">||</p>|</p>}
productiondate.scrub       {single|<p  itemprop="datePublished"|(|)|</p>}
country.scrub              {single(separator="(" include=first)|<p  itemprop="datePublished"|>|</p>|</p>}
showicon.scrub             {single|<div class="cover">|src="|"|</div>}
episode.scrub              {regex||\s*(\(T?\d+(?:\/\d+)?\):(?:\s*Ep\.\d+)?)\s*[^<]*</h1>||}
temp_2.scrub               {multi|<div class="slide">|src="|"|</div>}
*
scope.range                {(showdetails)|end}
title.modify               {addstart|'index_title'}
subtitle.modify            {clear('title')}
title.modify               {remove('subtitle' not "")|: 'subtitle'}
episode.modify             {remove(type=regex)|"\(\d{4}\):\s*"}
episode.modify             {remove(type=regex)|"[\(\):]"}
episode.modify             {replace(type=regex)|"^(T?.*?)\d+"|T}
*
rating.modify              {cleanup(style=upper)}
ratingicon.modify          {addstart(not "")|https://www.movistarplus.es}
if                         {('starrating' not "")|2}
starrating.modify          {calculate(format=F1)|2 *}
starrating.modify          {addend|/10}
*
* use landscape image for sports(Deportes),selects last image in gallery
if                         {(['index_category' "Deportes"] ['temp_2' not ""] &)|end}
showicon.modify            {substring(type=element)|'temp_2' -1 1}
end_if
end_scope
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*index_site_id.scrub      {regex||"([^"]*)-CODE":||}
*index_site_channel.scrub {regex||"NOMBRE":"([^"]*","URL":"[^"]*","DIAL_PRINCIPAL":\["[^"]*"\])||}
*index_site_channel.modify{replace(type=regex)|"^[^\"]*(\",\"URL\":\"[^\"]*\",\"DIAL_PRINCIPAL\":)"| }
*index_site_channel.modify{remove|"}
*index_site_channel.modify{remove(type=regex)|"\\[tn]"}
*index_site_channel.modify{cleanup(style=unidecode)}
*index_site_id.modify     {cleanup(removeduplicates link="index_site_channel")}
** @auto_xml_channel_end
