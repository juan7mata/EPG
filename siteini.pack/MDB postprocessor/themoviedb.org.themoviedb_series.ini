**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing IMDB data from TvGuide websites
* @MinSWversion: V5.1.4.7
*	-  (postprocess V3.2.5)
* @Site: themoviedb.org, primary search with themoviedb
* @Revision 5 - [21/04/2024] Balckbear199
*   - actor fix for role containing ( or )
* @Revision 4 - [18/04/2024] Balckbear199/Jan van Straaten
*	- main title before aka's
*   - director fix
* @Revision 3 - [14/04/2024] Balckbear199/Jan van Straaten
*	- change in episodenumlist and temp_9 & temp_3
*	- unfinished .. missing .. desc, credits, productiondat, showicon, starrating, review
* @Revision 2 - [02/10/2023] Blackbear199
*	- update
* @Revision 1 [28/03/2022] Blackbear199
*	- rewrite with search site themoviedb
* @Revision 0 [08/02/2021] Blackbear199
*	- creation
* @Remarks: none
* @header_end
**------------------------------------------------------------------------------------------------
site {url=themoviedb.org|mdbinitype=serie|cultureinfo=en-US|charset=UTF-8|matchfactor=50|searchsite=themoviedb}
site {episodesystem=onscreen}
*
scope.range                {(primarysearch)|end}
url_primarysearch          {url(urlencode=1)|https://www.themoviedb.org/search/tv?query=|'title'|}
url_primarysearch.headers  {customheader=Accept-Encoding=gzip,deflate,br}
*
mdb_show_id.scrub          {multi|primary|<div class="title">|href="/tv/|">|</div>}
mdb_show_id.modify         {cleanup(removeduplicates)}
mdb_show_id.modify         {substring(type=element)|0 8}
*
* on line..
* url_mdb_p1
* url_mdb_p3
* url_mdb_p4
* url_mdb_p5
* replace language         =en-US with your preferred language from the list below
* ----------------------------------------------------------
*  ar-SA     bg-BG     ca-ES     da-DK     de-DE     ru-RU
*  ar-AE     en-US     es-ES     es-MX     de-CH     cs-CZ
*  fa-IR     fi-FI     fr-CA     fr-FR     de-AT     ka-GE
*  hr-HR     hu-HU     id-ID     it-IT     ja-JP     et-EE
*  nl-BE     ko-KR     lb-LB     lt-LT     lv-LV     he-IL
*  nl-NL     no-NO     pl-PL     pt-BR     pt-PT     hi-IN
*  ro-RO     nb-NO     sk-SK     sr-RS     sv-SE     la-LA
*  ta-IN     th-TH     tr-TR     uk-UA     uz-UZ     nn-NN
*  vi-VN     zh-CN     zh-HK     zh-TW     el-GR     sl-SI
* ----------------------------------------------------------
* if a translation is not available in the preferred Language
* or a invalid language code is used
* default is en-US
*
url_mdb_p1                 {url|primary|https://www.themoviedb.org/tv/|mdb_show_id|?language=en-US}
url_mdb_p2                 {url|primary|https://www.themoviedb.org/tv/|mdb_show_id|/translations}
url_mdb_p3                 {url|primary|https://www.themoviedb.org/tv/|mdb_show_id|/season/|subpage|?language=en-US}
url_mdb_p4                 {url|primary|https://www.themoviedb.org|mdb_episode_id|?language=en-US}
url_mdb_p5                 {url|primary|https://www.themoviedb.org|mdb_episode_id|/cast?language=en-US}
url_mdb_p6                 {url|primary|https://www.themoviedb.org/tv/|mdb_show_id|/reviews}
url_mdb_p7                 {url|primary|https://www.themoviedb.org/tv/|mdb_show_id|/discuss}
url_mdb.headers            {customheader=Accept-Encoding=gzip,deflate,br}
*
mdb_temp_9.scrub           {regex|p1||<h2><a href="/tv/[^/]*/season/(\d+)\?language=[a-z]{2}-[A-Z]{2}">||}
mdb_temp_9.modify          {set('mdb_temp_9' > "50")|50}
subpage_mdb_p3.format      {list(count='mdb_temp_9')|1}
end_scope
*
scope.range                {(match)|end}
mdb_episodetitlelist.scrub {multi|p3|<h3><a class="no_click open"|">|</a>|</h3>}
*mdb_episodenumlist.scrub   {regex(pattern="season 'S1' episode 'E1'")|p3||<h3><a class="no_click open" episode_id[^>]*href="/tv/[^/]*/(season/\d+/episode/\d+)"[^>]*>||}
mdb_episodenumlist.scrub   {regex(pattern="season 'S1' episode 'E1'")|p3||season/\d+/episode/\d+||}
mdb_episodenumlist.modify  {cleanup(removeduplicates)}
mdb_episodenumlist.modify  {replace|/| }
*
* aka title
mdb_temp_5.scrub           {multi|p2|<table class="translations">||</table>|</table>}
mdb_temp_4.modify          {clear}
loop                       {(each "mdb_temp_3" in 'mdb_temp_5')|end}
mdb_temp_8.modify          {substring(type=regex)|'mdb_temp_3' "<td class="expand">[^<]*<h3>([^<]*)<\/h3>"} * translated title
mdb_temp_7.modify          {substring(type=regex)|'mdb_temp_3' "<h2>(.*?)\s<"} *language name,ex English
mdb_temp_6.modify          {substring(type=regex)|'mdb_temp_3' "<span>(\([a-z]{2}-[A-Z]{2}\))<\/span>"} *language code,ex (en-US)
mdb_temp_7.modify          {set| ('mdb_temp_7')}
*****ENABLE next line(remove * from beginning) to omit language name
*mdb_temp_7.modify          {clear}
mdb_temp_6.modify          {addstart('mdb_temp_7' "")| }
*****DISABLE next line(add * to beginning) to omit language code
mdb_temp_7.modify          {addend|'mdb_temp_6'}
mdb_temp_8.modify          {addend([not ""] ['mdb_temp_7' not ""] &)|'mdb_temp_7'}
mdb_temp_4.modify          {addend('mdb_temp_8' not "")|'mdb_temp_8'####}
end_loop
* main title
mdb_variable_element.scrub {regex|p1||<h2 class="\d+">[^>]*>(.*?)</a>||}
*append aka's to end of main title
mdb_variable_element.modify{addend|####'mdb_temp_4'}
*set title
mdb_title.modify           {substring(type=regex)|'mdb_variable_element' "(.*?)####"}
*
mdb_temp_1.scrub           {regex|p3||<h3><a class="no_click open"[^>]*href="([^"]*)\?language=[a-z]{2}-[A-Z]{2}"[^>]*>||}
end_scope
*
scope.range                {(getelements)|end}
mdb_temp_2.modify          {clear}
mdb_temp_2.modify          {calculate(['mdb_episodetitlelist' not ""] ['mdb_subtitle' not ""] & [""] & type=element format=F0)|'mdb_episodetitlelist' 'mdb_subtitle' @}
mdb_temp_2.modify          {calculate(['mdb_episodenumlist' not ""] [""] & type=element format=F0)|'mdb_episodenumlist' 'mdb_episode' @}
*
if                         {(['mdb_temp_2' not ""] ['mdb_temp_2' not "-1"] &)|end}
mdb_episode_id.modify      {substring(type=element)|'mdb_temp_1' 'mdb_temp_2' 1}
mdb_subtitle.modify        {substring("" type=element)|'mdb_episodetitlelist' 'mdb_temp_2' 1}
mdb_episode.modify         {substring("" type=element)|'mdb_episodenumlist' 'mdb_temp_2' 1}
mdb_episode.modify         {replace|season |S}
mdb_episode.modify         {replace|episode |E}
mdb_episodeabsolute.modify {calculate(format=F0)|'mdb_temp_2' 1 +}
mdb_episodeabsolute.modify {addstart|E}
end_if
*
mdb_temp_2.modify          {substring(type=regex)|'mdb_episode' "E(\d+)"}
mdb_temp_2.modify          {calculate(format=F0)|1 -}
mdb_description.scrub      {regex|p4||<div class="overview">(.+?)</div>||}
mdb_description.modify     {substring(type=element)|'mdb_description' 'mdb_temp_2' 1}
mdb_description.modify     {substring(type=regex)|"<p>(.+?)</p>"}
mdb_director.scrub         {multi|p4|Directed by:</strong>|">|</a>|</p>}
*
*actor only no role
*mdb_actor.scrub            {multi|p5|<ol class="people credits ">|<div class="info">|</div>|</ol>}
*mdb_actor.modify           {remove(type=regex)|"<p class=\"character\">.*?<\/p>"}
*mdb_actor.modify           {cleanup(tags="<"">")}
*
*actor with role
mdb_actor.scrub          {multi|p3|<ol class="people credits ">|<div class="info">|</div>|</ol>}
mdb_actor.modify         {replace(type=regex)|"[\(\)]"|'}
mdb_actor.modify         {replace|<p class="character">|(role=}
mdb_actor.modify         {cleanup(tags="<"">")}
mdb_actor.modify         {addend(~ "role=")|)}
mdb_actor.modify         {remove(type=regex)|"[\n\r]*"}
mdb_actor.modify         {remove(type=regex)|"(\s*)\("}
mdb_actor.modify         {remove|(role=)}
*
mdb_productiondate.scrub   {regex|p4||<span class="date">(.+?)</span>||}
mdb_productiondate.modify  {substring(type=element)|'mdb_productiondate' 'mdb_temp_2' 1}
mdb_productiondate.modify  {calculate(format=productiondate)}
mdb_category.scrub         {multi|p1|<span class="genres">|">|</a>|</span>}
mdb_showicon.scrub         {regex|p4||<div class=\"glyphicons_v2 picture grey backdrop no_image_holder\">(.+?)</div>||}
mdb_showicon.modify        {substring(type=element)|'mdb_showicon' 'mdb_temp_2' 1}
mdb_showicon.modify        {substring(type=regex)|"src=\"(.+?)\"\ssrcset"}
mdb_starrating.scrub       {regex|p4||<span class="glyphicons_v2 star white"></span>(\d+)<span||}
mdb_starrating.modify      {substring(type=element)|'mdb_starrating' 'mdb_temp_2' 1}
mdb_starrating.modify      {calculate(format=F1)|10 /}
mdb_starrating.modify      {set(not "")|'mdb_starrating'/10}
mdb_starrating.modify      {clear("0.0")} * ??
*mdb_country.scrub          {single|p1|<span class="release">|(|)|</span>} *release country,not country of orgin
mdb_plot.scrub             {single|p1|<h3 class="tagline"|>|</h3>|</h3>} *used for tagline
mdb_review.scrub           {multi(exclude="MORE REVIEWS""Score:""Rating:")|p6|<div class="teaser">|<p>|</p>|</div>}
mdb_review.modify          {cleanup(tags="<a class""</a>")}
mdb_commentsummary.scrub   {multi(exclude="Reported Problem""Runtime")|p7|<div class="link_wrapper">|">|</a>|</div>}
mdb_commentsummary.modify  {substring(type=regex)|"^[0-9a-zA-z]+.*$"} *needed for empty elements
end_scope
