**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing IMDB data from TvGuide websites
* @MinSWversion: V5.1.4.7
*	-  (postprocess V3.2.5)
* @Site: themoviedb.org, primary search with themoviedb
* @Revision 4 - [21/04/2024] Balckbear199
*	- remove productiondate from primarysearch(better search results)
*   - actor fix for role containing ( or )
* @Revision 3 - [18/04/2024] Balckbear199/Jan van Straaten
*	- main title before aka's
*   - showicon fix
* @Revision 2 - [02/10/2023] Blackbear199
*	- update
* @Revision 1 [28/03/2022] Blackbear199
*	- rewrite with searcg site themoviedb
* @Revision 0 [08/02/2021] Blackbear199
*	- creation
* @Remarks: none
* @header_end
**------------------------------------------------------------------------------------------------
site {url=themoviedb.org|mdbinitype=movie|cultureinfo=en-US|charset=UTF-8|matchfactor=50|searchsite=themoviedb}
*
scope.range              {(primarysearch)|end}
url_primarysearch        {url(urlencode=1)|https://www.themoviedb.org/search?query=|'title'|}
url_primarysearch.headers{customheader=Accept-Encoding=gzip,deflate,br}
*
mdb_show_id.scrub        {multi|primary|<div class="title">|href="/movie/|">|</div>}
mdb_show_id.modify       {cleanup(removeduplicates)}
mdb_show_id.modify       {substring(type=element)|0 5}
*
* on line..
* url_mdb_p1
* url_mdb_p3
* replace language       =en-US with your preferred language from the list below
* ----------------------------------------------------------
*  ar-SA     bg-BG     ca-ES     da-DK     de-DE     ru-RU     
*  ar-AE     en-US     es-ES     es-MX     de-CH     cs-CZ
*  fa-IR     fi-FI     fr-CA     fr-FR     de-AT     ka-GE
*  hr-HR     hu-HU     id-ID     it-IT     ja-JP     et-EE
*  nl-BE     ko-KR     lb-LB     lt-LT     lv-LV     he-IL
*  nl-NL     no-NO     pl-PL     pt-BR     pt-PT     hi-IN
*  ro-RO     nb-NO     sk-SK     sr-RS     sv-SE     la-LA
*  ta-IN     th-TH     tr-TR     uk-UA     uz-UZ     nn-NN
*  vi-VN     zh-CN     zh-HK     zh-TW     el-GR     sl-SI
* ----------------------------------------------------------
* if a translation is not available in the preferred Language
* or a invalid language code is used
* default is en-US
*
url_mdb_p1               {url|primary|https://www.themoviedb.org/movie/|mdb_show_id|?language=en-US}
url_mdb_p2               {url|primary|https://www.themoviedb.org/movie/|mdb_show_id|/translations}
url_mdb_p3               {url|primary|https://www.themoviedb.org/movie/|mdb_show_id|/cast?language=en-US}
url_mdb_p4               {url|primary|https://www.themoviedb.org/movie/|mdb_show_id|/reviews}
url_mdb_p5               {url|primary|https://www.themoviedb.org/movie/|mdb_show_id|/discuss}
url_mdb.headers          {customheader=Accept-Encoding=gzip,deflate,br}
end_scope
*
scope.range              {(match)|end}
* aka title
mdb_temp_3.scrub         {multi|p2|<table class="translations">||</table>|</table>}
mdb_temp_4.modify        {clear}
loop                     {(each "mdb_temp_9" in 'mdb_temp_3')|end}
mdb_temp_8.modify        {substring(type=regex)|'mdb_temp_9' "<td class="expand">[^<]*<h3>([^<]*)<\/h3>"} * translated title
mdb_temp_7.modify        {substring(type=regex)|'mdb_temp_9' "<h2>(.*?)\s<"} *language name,ex English
mdb_temp_6.modify        {substring(type=regex)|'mdb_temp_9' "<span>(\([a-z]{2}-[A-Z]{2}\))<\/span>"} *language code,ex (en-US)
mdb_temp_7.modify        {set| ('mdb_temp_7')}
*****ENABLE next line(remove * from beginning) to omit language name
*mdb_temp_7.modify        {clear}
mdb_temp_6.modify        {addstart('mdb_temp_7' "")| }
*****DISABLE next line(add * to beginning) to omit language code
mdb_temp_7.modify        {addend|'mdb_temp_6'}
mdb_temp_8.modify        {addend([not ""] ['mdb_temp_7' not ""] &)|'mdb_temp_7'}
mdb_temp_4.modify        {addend('mdb_temp_8' not "")|'mdb_temp_8'####}
end_loop
*main title
mdb_temp_2.scrub         {regex|p1||<h2 class="\d+">[^>]*>(.*?)</a>||}
*append aka's to end of main title
mdb_temp_2.modify        {addend|####'mdb_temp_4'}
*set title
mdb_title.modify         {substring(type=regex)|'mdb_temp_2' "(.*?)####"}
end_scope
*
scope.range              {(getelements)|end}
mdb_description.scrub    {single|p1|<div class="overview" dir="auto">|<p>|</p>|</div>}
mdb_director.scrub       {regex|p3||<p>(?:<a href[^>]*>)?([^<]*)(?:</a>)?</p>[^<]*<p class="episode_count_crew">.\s+Director.\s+</p>||}
mdb_producer.scrub       {regex|p3||<p>(?:<a href[^>]*>)?([^<]*)(?:</a>)?</p>[^<]*<p class="episode_count_crew">.\s+Producer.\s+</p>||}
*
*actor only no role
*mdb_actor.scrub          {multi|p3|<ol class="people credits ">|<div class="info">|</div>|</ol>}
*mdb_actor.modify         {remove(type=regex)|"<p class=\"character\">.*?<\/p>"}
*mdb_actor.modify         {cleanup(tags="<"">")}
*
* actor with role
mdb_actor.scrub          {multi|p3|<ol class="people credits ">|<div class="info">|</div>|</ol>}
mdb_actor.modify         {replace(type=regex)|"[\(\)]"|'}
mdb_actor.modify         {replace|<p class="character">|(role=}
mdb_actor.modify         {cleanup(tags="<"">")}
mdb_actor.modify         {addend(~ "role=")|)}
mdb_actor.modify         {remove(type=regex)|"[\n\r]*"}
mdb_actor.modify         {remove(type=regex)|"(\s*)\("}
mdb_actor.modify         {remove|(role=)}
*
mdb_productiondate.scrub {multi|p1|<span class="release">||</span>|</span>}
mdb_productiondate.modify{calculate(format=productiondate)}
mdb_category.scrub       {multi|p1|<span class="genres">|">|</a>|</span>}
mdb_showicon.scrub       {single|p1|<div class="poster">|<img class="poster w-[100%]" src="|"|</div>}
mdb_starrating.scrub     {regex|p1||<div class="user_score_chart" data-percent="([1-9]\d*\.\d+)"||}
mdb_starrating.modify    {calculate(not "" format=F1)|10 /}
*mdb_country.scrub       {single|p1|<span class="release">|(|)|</span>} *release date,not country of orgin
mdb_plot.scrub           {single|p1|<h3 class="tagline"|>|</h3>|</h3>} *used for tagline
mdb_review.scrub         {multi(exclude="MORE REVIEWS""Score:""Rating:")|p4|<div class="teaser">|<p>|</p>|</div>}
mdb_review.modify        {cleanup(tags="<a class""</a>")}
mdb_commentsummary.scrub {multi(exclude="Reported Problem""Runtime")|p5|<div class="link_wrapper">|">|</a>|</div>}
mdb_commentsummary.modify{substring(type=regex)|"^[0-9a-zA-z]+.*$"} *needed for empty elements
end_scope
